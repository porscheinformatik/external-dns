name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install CI
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Install additional CI for nektos/act
        run: |
          apt update
          apt install -y make gcc libc-dev git
        if: github.actor == 'nektos/act'

      - name: Get modified files
        id: modified-files
        uses: jitterbit/get-changed-files@v1        

      - name: Generate cmdline argument documentation
        run: |
          make
          echo -e "# Commandline arguments\n\nThis document is auto-generated from \`external-dns --help\`.\n\n" > docs/cmdline-args.md
          echo -en "## Output\n\n\`" >> docs/cmdline-args.md
          build/external-dns --help >> docs/cmdline-args.md 2>&1
          echo "\`" >> docs/cmdline-args.md
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/cmdline-args.md
          git commit -m "Add new cmdline argument docs"
        if: contains(steps.modified-files.all,'pkg/apis/externaldns/types.go')

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        if: contains(steps.modified-files.all,'pkg/apis/externaldns/types.go') && github.actor != 'nektos/act'
